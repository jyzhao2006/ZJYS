// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zjy.helloworld.proto

#ifndef PROTOBUF_zjy_2ehelloworld_2eproto__INCLUDED
#define PROTOBUF_zjy_2ehelloworld_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/service.h>
// @@protoc_insertion_point(includes)

namespace zjy {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_zjy_2ehelloworld_2eproto();
void protobuf_AssignDesc_zjy_2ehelloworld_2eproto();
void protobuf_ShutdownFile_zjy_2ehelloworld_2eproto();

class request;
class response;

// ===================================================================

class request : public ::google::protobuf::Message {
 public:
  request();
  virtual ~request();
  
  request(const request& from);
  
  inline request& operator=(const request& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const request& default_instance();
  
  void Swap(request* other);
  
  // implements Message ----------------------------------------------
  
  request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const request& from);
  void MergeFrom(const request& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // required string args = 2;
  inline bool has_args() const;
  inline void clear_args();
  static const int kArgsFieldNumber = 2;
  inline const ::std::string& args() const;
  inline void set_args(const ::std::string& value);
  inline void set_args(const char* value);
  inline void set_args(const char* value, size_t size);
  inline ::std::string* mutable_args();
  
  // optional int32 opt = 3;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 3;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:zjy.request)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 type_;
  ::std::string* args_;
  static const ::std::string _default_args_;
  ::google::protobuf::int32 opt_;
  friend void  protobuf_AddDesc_zjy_2ehelloworld_2eproto();
  friend void protobuf_AssignDesc_zjy_2ehelloworld_2eproto();
  friend void protobuf_ShutdownFile_zjy_2ehelloworld_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static request* default_instance_;
};
// -------------------------------------------------------------------

class response : public ::google::protobuf::Message {
 public:
  response();
  virtual ~response();
  
  response(const response& from);
  
  inline response& operator=(const response& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const response& default_instance();
  
  void Swap(response* other);
  
  // implements Message ----------------------------------------------
  
  response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const response& from);
  void MergeFrom(const response& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);
  
  // required string result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline const ::std::string& result() const;
  inline void set_result(const ::std::string& value);
  inline void set_result(const char* value);
  inline void set_result(const char* value, size_t size);
  inline ::std::string* mutable_result();
  
  // optional int32 opt = 3;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 3;
  inline ::google::protobuf::int32 opt() const;
  inline void set_opt(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:zjy.response)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 status_;
  ::std::string* result_;
  static const ::std::string _default_result_;
  ::google::protobuf::int32 opt_;
  friend void  protobuf_AddDesc_zjy_2ehelloworld_2eproto();
  friend void protobuf_AssignDesc_zjy_2ehelloworld_2eproto();
  friend void protobuf_ShutdownFile_zjy_2ehelloworld_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static response* default_instance_;
};
// ===================================================================

class SearchService_Stub;

class SearchService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline SearchService() {};
 public:
  virtual ~SearchService();
  
  typedef SearchService_Stub Stub;
  
  static const ::google::protobuf::ServiceDescriptor* descriptor();
  
  virtual void Search(::google::protobuf::RpcController* controller,
                       const ::zjy::request* request,
                       ::zjy::response* response,
                       ::google::protobuf::Closure* done);
  
  // implements Service ----------------------------------------------
  
  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(SearchService);
};

class SearchService_Stub : public SearchService {
 public:
  SearchService_Stub(::google::protobuf::RpcChannel* channel);
  SearchService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~SearchService_Stub();
  
  inline ::google::protobuf::RpcChannel* channel() { return channel_; }
  
  // implements SearchService ------------------------------------------
  
  void Search(::google::protobuf::RpcController* controller,
                       const ::zjy::request* request,
                       ::zjy::response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(SearchService_Stub);
};


// ===================================================================


// ===================================================================

// request

// required int32 type = 1;
inline bool request::has_type() const {
  return _has_bit(0);
}
inline void request::clear_type() {
  type_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 request::type() const {
  return type_;
}
inline void request::set_type(::google::protobuf::int32 value) {
  _set_bit(0);
  type_ = value;
}

// required string args = 2;
inline bool request::has_args() const {
  return _has_bit(1);
}
inline void request::clear_args() {
  if (args_ != &_default_args_) {
    args_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& request::args() const {
  return *args_;
}
inline void request::set_args(const ::std::string& value) {
  _set_bit(1);
  if (args_ == &_default_args_) {
    args_ = new ::std::string;
  }
  args_->assign(value);
}
inline void request::set_args(const char* value) {
  _set_bit(1);
  if (args_ == &_default_args_) {
    args_ = new ::std::string;
  }
  args_->assign(value);
}
inline void request::set_args(const char* value, size_t size) {
  _set_bit(1);
  if (args_ == &_default_args_) {
    args_ = new ::std::string;
  }
  args_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* request::mutable_args() {
  _set_bit(1);
  if (args_ == &_default_args_) {
    args_ = new ::std::string;
  }
  return args_;
}

// optional int32 opt = 3;
inline bool request::has_opt() const {
  return _has_bit(2);
}
inline void request::clear_opt() {
  opt_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 request::opt() const {
  return opt_;
}
inline void request::set_opt(::google::protobuf::int32 value) {
  _set_bit(2);
  opt_ = value;
}

// -------------------------------------------------------------------

// response

// required int32 status = 1;
inline bool response::has_status() const {
  return _has_bit(0);
}
inline void response::clear_status() {
  status_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 response::status() const {
  return status_;
}
inline void response::set_status(::google::protobuf::int32 value) {
  _set_bit(0);
  status_ = value;
}

// required string result = 2;
inline bool response::has_result() const {
  return _has_bit(1);
}
inline void response::clear_result() {
  if (result_ != &_default_result_) {
    result_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& response::result() const {
  return *result_;
}
inline void response::set_result(const ::std::string& value) {
  _set_bit(1);
  if (result_ == &_default_result_) {
    result_ = new ::std::string;
  }
  result_->assign(value);
}
inline void response::set_result(const char* value) {
  _set_bit(1);
  if (result_ == &_default_result_) {
    result_ = new ::std::string;
  }
  result_->assign(value);
}
inline void response::set_result(const char* value, size_t size) {
  _set_bit(1);
  if (result_ == &_default_result_) {
    result_ = new ::std::string;
  }
  result_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* response::mutable_result() {
  _set_bit(1);
  if (result_ == &_default_result_) {
    result_ = new ::std::string;
  }
  return result_;
}

// optional int32 opt = 3;
inline bool response::has_opt() const {
  return _has_bit(2);
}
inline void response::clear_opt() {
  opt_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 response::opt() const {
  return opt_;
}
inline void response::set_opt(::google::protobuf::int32 value) {
  _set_bit(2);
  opt_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace zjy

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_zjy_2ehelloworld_2eproto__INCLUDED
